# Load notebook.conf or desktop.conf.
include "~/.config/sway/$(sudo dmidecode --string chassis-type | tr A-Z a-z).conf"
# Load ubuntu.conf or arch.conf.
include "~/.config/sway/$(cat /etc/os-release | sed -n 's/^ID=\(.*\)$/\1/p').conf"

set {
  # Use the windows key as the main modifier.
  $mod mod4

  $swayctrl ~/bin/swayctrl

  $left h
  $down j
  $up k
  $right l

  $background ~/private/backgrounds/1045118.jpg
}

exec $swayctrl daemon

output * bg $background fill

# Hack to completely hide titlebar borders.
# As an aded bonus, tabbed containers have no top border so Chrome tabs extend
# the top of the output and so clicking/scrolling doesn't require precise mouse
# movement.
font pango:monospace 0
titlebar_border_thickness 0
titlebar_padding 0

# TODO: This doesn't seem to have an effect.
# for_window [title=".*"] urgent deny

for_window {
  [title=".*"] floating enable
  [app_id="google-chrome"] floating disable
  [app_id="Alacritty"] floating disable
  [app_id="^com.mitchellh.ghostty$"] floating disable
  [app_id="Slack"] floating disable
  [app_id="discord"] floating disable
}

exec mako

input "type:keyboard" {
  xkb_options caps:swapescape
  repeat_delay 250
  repeat_rate 40
}

# I don't use the laptop touchscreen.
input "type:touch" {
  events disabled
}

input "type:touchpad" {
  scroll_method two_finger
  scroll_factor 1
  tap enabled
  tap_button_map lrm
}

# Key bindings

# Screen lock
bindsym ctrl+alt+l exec swaylock

# Start a terminal
bindsym $mod+Return exec $term

# Kill focused window
bindsym $mod+q kill

# Start application launcher
bindsym $mod+space exec fuzzel

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+shift+c reload

focus_follows_mouse no

# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# Move the focused window with the same, but add shift
bindsym $mod+shift+$left move left
bindsym $mod+shift+$down move down
bindsym $mod+shift+$up move up
bindsym $mod+shift+$right move right

# Workspaces

# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4

# Move focused container to workspace
bindsym $mod+shift+1 [con_id=__focused__] move container to workspace number 1, focus
bindsym $mod+shift+2 [con_id=__focused__] move container to workspace number 2, focus
bindsym $mod+shift+3 [con_id=__focused__] move container to workspace number 3, focus
bindsym $mod+shift+4 [con_id=__focused__] move container to workspace number 4, focus

bindsym $mod+shift+period [con_id=__focused__] move container to output right, focus
bindsym $mod+shift+comma [con_id=__focused__] move container to output right, focus

# Layout stuff:
#
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
# bindsym $mod+s layout stacking
bindsym $mod+e layout toggle split
bindsym $mod+w layout tabbed
# Semi-hacky way to pull the current window out of the tab group.
bindsym $mod+shift+w move up; move left

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
#bindsym $mod+shift+space floating toggle
bindsym --whole-window $mod+BTN_MIDDLE floating toggle

# Move focus to the parent container
bindsym $mod+a focus parent
#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.
#

# Move the currently focused window to the scratchpad
bindsym $mod+shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

# Shortcuts

# Switch to next/previous tab
bindsym shift+alt+l exec wtype -M ctrl -P next
bindsym shift+alt+h exec wtype -M ctrl -P prior

# Swap to the most recently used non-focused window
bindsym alt+tab exec $swayctrl prev

# Swap between instances of the same application
bindsym alt+grave exec $swayctrl appnext

# Take a screenshot
bindsym shift+alt+4 exec ~/scripts/screenshot

# Volume/mute buttons
bindsym XF86AudioMute exec pamixer --toggle-mute
bindsym XF86AudioLowerVolume exec pamixer -d 5
bindsym XF86AudioRaiseVolume exec pamixer -i 5

# Media control buttons
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Open up a suspend/lock/reboot/etc menu.
bindsym XF86Sleep exec scripts/powermenu
bindsym $mod+shift+p exec scripts/powermenu

# Open up a screen scaling menu.
bindsym XF86Launch5 exec scripts/screenmenu

# Bind some of the extra buttons on my Keychron Q6.
bindsym XF86Tools exec playerctl play-pause
bindsym XF86Launch7 exec scripts/powermenu

# Screen brightness buttons
bindsym XF86MonBrightnessUp exec brightnessctl -e s 8%+
bindsym XF86MonBrightnessDown exec brightnessctl -n500 -e s 8%-

# Application setup

# These are a bit cryptic; they're optimized to be easy to type.
bindsym shift+alt+space     exec $swayctrl focus -appid google-chrome -launch $chrome-cmd
bindsym shift+alt+semicolon exec $swayctrl focus -title '^tmux \| ' -launch '$term'
bindsym shift+alt+return    exec $swayctrl focus -title '^nvim$'
bindsym shift+alt+s         exec $swayctrl focus -appid Slack -launch 'gtk-launch slack'
bindsym shift+alt+d         exec $swayctrl focus -appid discord -launch 'gtk-launch discord'
bindsym shift+alt+e         exec $swayctrl focus -appid l3afpad -launch l3afpad
bindsym shift+alt+f         exec $swayctrl focus -appid org.gnome.Nautilus -launch nautilus

mouse_warping none

exec_always gsettings set org.gnome.desktop.interface {
  cursor-theme $cursor-theme
  cursor-size $cursor-size
  font-name 'Roboto Regular 12'
  document-font-name 'Roboto Regular 12'
  monospace-font-name 'Inconsolata Medium 14'
  gtk-theme 'Yaru-blue'
  gtk-color-theme 'Yaru-blue'
  icon-theme 'Yaru-blue'
}

seat seat0 xcursor_theme $cursor-theme $cursor-size

include ~/.config/sway/config.d/*

# For xdg-desktop-portal-wlr
exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway
