# Ubuntu initial setup

* Install Ubuntu Desktop normally
* Install packages
  - build-essential
  - curl
  - fonts-font-awesome
  - fonts-inconsolata
  - fonts-roboto
  - gh
  - gnome-tweaks
  - grimshot
  - htop
  - l3afpad
  - mako-notifier
  - openssh-server
  - pavucontrol
  - python-is-python3
  - python3-pip
  - ripgrep
  - screen
  - sway
  - swayidle
  - swaylock
  - tmux
  - ttf-mscorefonts-installer
  - wl-clipboard
  - wtype
  - xdg-desktop-portal-wlr
  - zsh
* Install a few packages from PPAs:
  - Alacritty: sudo add-apt-repository ppa:aslatter/ppa
  - Neovim: sudo add-apt-repository ppa:neovim-ppa/stable
  - Git: sudo add-apt-repository ppa:git-core/ppa
* TODO: Install (and document)
  fuzzel
  pamixer

# Arch initial setup

Followed the normal install guide at https://wiki.archlinux.org/title/Installation_guide
For disk setup, use LVM on LUKS: https://wiki.archlinux.org/title/Dm-crypt/Encrypting_an_entire_system#LVM_on_LUKS
  Also followed https://gist.github.com/huntrar/e42aee630bee3295b2c671d098c81268 (slightly outdated)
  Separate swap, root, home, /data
  ESP is mounted at /boot
Essential packages install:
  pacstrap /mnt base linux linux-firmware mkinitcpio lvm2 neovim iwd
    TODO
For fstab, change relatime to noatime
mkinitcpio.conf required adding "encrypt lvm2"
Grub
  pacman -S grub
  (Didn't customize /etc/default/grub)
  grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=grub
  grub-mkconfig -o /boot/grub/grub.cfg
Reboot to new system
Networking with systemd-networkd (see http://www.lukylx.org/installation/essentials-installation.html)
  /etc/systemd/network/25-wireless.network
    [Match]
    Name=w*
    [Network]
    DHCP=yes
    IgnoreCarrierLoss=3s
  systemctl enable --now systemd-networkd
  systemctl enable --now systemd-resolved
  ln -sf /usr/lib/systemd/resolv.conf /etc/resolv.conf
  systemctl enable --now iwd
  iwctl -> connect
Install zsh, sudo
User creation: useradd -m -G adm,log,sys,wheel -s /bin/zsh caleb
  EDITOR=vim visudo and give wheel sudo access
  Then I can log in as my user
Install many packages
  alacritty
  base-devel
  brightnessctl
  fuzzel
  git
  github-cli
  gnome-tweaks
  htop
  l3afpad
  mako
  man-db
  nautilus
  openssh
  pamixer
  pavucontrol
  polkit
  ripgrep
  screen
  sway
  swaybg
  swayidle
  swaylock
  tmux
  otf-font-awesome
  ttf-inconsolata
  ttf-roboto
  waybar
  wl-clipboard
  wtype
  xcursor-vanilla-dmz
  xdg-desktop-portal-wlr
  xorg-xwayland
  Choose droid as ttf-font
Install yay
  cd apps && git clone https://aur.archlinux.org/yay.git
  cd yay && makepkg -si
Install some yay packages
  grimshot
  yaru-gtk-theme
  yaru-icon-theme

# Common Ubuntu/Arch Sway setup

[U] = Ubuntu, [A] = Arch

Copy in SSH keys from backup/previous installation
Clone dotfiles:
  git init .
  git remote add origin git@github.com:cespare/dotfiles.git
  git pull origin main
  git su
Clone neovim config:
  git clone git@github.com:cespare/nvim-config.git .config/nvim
  git su
Clone private repo and symlink ~/.ssh/config
[U] sudo update-alternatives --config editor
  - choose nvim
[U] Install waybar following directions below
[U] Fix mako according to directions below
Install Go
  https://go.dev/doc/install and download latest release
  mkdir $GOROOT_BOOTSTRAP && cd $GOROOT_BOOTSTRAP
  tar -xzf ~/Downloads/go.xyz.tgz && mv go/* ./ && rmdir go
  cd ~/apps
  git clone https://go.googlesource.com/go go
  cp -r go godev
  cd go/src && git checkout <tag> && ./all.bash
Install swayctrl
Start Sway
Launch alacritty terminal (should use zsh)
Install Chrome ([U] Use deb; [A] yay -S google-chrome)
  chrome://flags > Preferred Ozone platform "Auto" > Relaunch
  Sign into Google
  Sign into 1Password
  Settings > Appearance > Page zoom 125% (desktop only)
  Settings > Appearance > Use system title bar and borders
[A] Set up suspend and hibernation. Suspend should work out of the box but
  hibernation takes some tweaks. But it should still be easy using LVM on LUKS.
  Add "resume" to /etc/mkinitcpio.conf: ...lvm2 filesystems resume fsck
  Regenerate initramfs with 'sudo mkinitcpio -p linux'
  Edit /etc/default/grub to append to GRUB_CMDLINE_LINUX_DEFAULT "resume=UUID=<uuid of swap partition>"
  Regnerate grub with 'sudo grub-mkconfig -o /boot/grub/grub.cfg'
  Now hibernation should work (can test with 'systemctl hibernate')
  Edit /etc/systemd/logind.conf to add a few non-default opts:
    HandleSuspendKey=ignore
    HandleSuspendKeyLongPress=ignore
    HandleLidSwitch=suspend-then-hibernate
    HandleLidSwitchExternalPower=suspend-then-hibernate
    (We'll handle idle suspend with sway)
  Edit /etc/systemd/sleep.conf to change one option:
    HibernateDelaySec=3h
Install fzf: go install github.com/junegunn/fzf@latest
Activate the ssh-agent systemd unit:
  systemctl --user enable --now ssh-agent
Passwordless sudo:
  sudo visudo
  Change appropriate line to: %sudo	ALL=(ALL:ALL) NOPASSWD: ALL
Configure ssh server not to accept passwords (`PasswordAuthentication no`)
Raise file descriptor limits by editing /etc/security/limits.conf to have
  *                soft    nofile          50000
  *                hard    nofile          50000
Install and configure syncthing (see details in home repo).




Sway TODO:

Figure out weird movement (bad binding?)
Ideas: https://github.com/Crandel/home/blob/master/.config/sway/config
Figure out how to make media play/pause shortcut work


# Waybar

As of March 2023 the version of waybar in the Ubuntu 22.04 repos is old and has
some bugs that break the clock display. Install from source:

sudo apt install \
  clang-tidy \
  gobject-introspection \
  libdbusmenu-gtk3-dev \
  libevdev-dev \
  libfmt-dev \
  libgirepository1.0-dev \
  libgtk-3-dev \
  libgtkmm-3.0-dev \
  libinput-dev \
  libjsoncpp-dev \
  libmpdclient-dev \
  libnl-3-dev \
  libnl-genl-3-dev \
  libpulse-dev \
  libsigc++-2.0-dev \
  libspdlog-dev \
  libwayland-dev \
  libxkbregistry-dev \
  meson \
  scdoc \
  upower
mkdir -p ~/3p/waybar && cd ~/3p/waybar
git clone https://github.com/Alexays/Waybar .
meson build
ninja -C build
cp ./build/waybar ~/bin

# Mako

On Ubuntu 22.04, there's a permission issue and it doesn't launch by default.
https://github.com/emersion/mako/issues/257
Fix with:
sudo apt install apparmor-utils
sudo aa-disable /etc/apparmor.d/fr.emersion.Mako

# GIMP

The 2.xx versions in Ubuntu don't have Wayland (gtk 3) support.
One way to install a newer version is with flatpak:

sudo apt install flatpak
flatpak install --user https://flathub.org/beta-repo/appstream/org.gimp.GIMP.flatpakref
Run with: flatpak run org.gimp.GIMP//beta

# Slack

Slack on Wayland needs special treatment. First, install their .deb as normal.

cp /usr/share/applications/slack.desktop ~/.local/share/applications/
Edit ~/.local/share/applications/slack.desktop to add flags:
--ozone-platform=wayland --enable-features=UseOzonePlatform,WebRTCPipeWireCapturer

In preferences > Accessibility, set Zoom to 125%.
